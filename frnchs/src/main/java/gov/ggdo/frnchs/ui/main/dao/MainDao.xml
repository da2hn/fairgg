<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gov.ggdo.frnchs.ui.main.dao.MainDao">
	<select id="selectCodeList" parameterType="java.util.Map" resultType="egovMap">
		SELECT CODE_ID
				,CODE_NM
				,CODE_VALUE
		FROM TB_CMMN_CODE
		WHERE 1 = 1
		<if test='!@org.springframework.util.StringUtils@isEmpty(type)'>
			/*AND TYPE = #{type}*/
		</if>
	</select>
	<!-- 차트-관심업종 TOP3 -->
	<select id="selectChartIntrst" parameterType="java.util.Map" resultType="egovMap">
<!-- 	  WITH TMP AS (
	SELECT A.UPDT_DT::DATE
		 , D.LCLAS_INDUTY_CODE
		 , D.LCLAS_INDUTY_NM
		 , COUNT(D.LCLAS_INDUTY_CODE) AS CNT
	  FROM TB_INTRST_FRNCHS A
	 INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
	 INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
	 INNER JOIN TB_FRNCHS_LCLAS_CODE D ON C.LCLAS_INDUTY_CODE = D.LCLAS_INDUTY_CODE
	 WHERE A.DELETE_AT = 'N'
	   AND A.UPDT_DT BETWEEN DATE_TRUNC('WEEK',NOW())::DATE - 56 AND DATE_TRUNC('WEEK',NOW())::DATE -1
	 GROUP BY D.LCLAS_INDUTY_CODE, A.UPDT_DT::DATE
		 )
	SELECT /* A.SS */
		   A.EE
		 , COALESCE(SUM(B.CNT_LC01),0) AS CNT_LC01
		 , COALESCE(SUM(B.CNT_LC02),0) AS CNT_LC02
		 , COALESCE(SUM(B.CNT_LC03),0) AS CNT_LC03
	  FROM (
	SELECT DATE_TRUNC('WEEK',NOW())::DATE - LEVEL AS SS
		 , (DATE_TRUNC('WEEK',NOW())::DATE - LEVEL) + 6 AS EE
	  FROM GENERATE_SERIES(7,56,7) LEVEL
		 ) A
	  LEFT OUTER JOIN
		 (
	SELECT UPDT_DT
		 , COALESCE(SUM(CNT) FILTER(WHERE LCLAS_INDUTY_CODE='LC01'), 0) AS CNT_LC01
		 , COALESCE(SUM(CNT) FILTER(WHERE LCLAS_INDUTY_CODE='LC02'), 0) AS CNT_LC02
		 , COALESCE(SUM(CNT) FILTER(WHERE LCLAS_INDUTY_CODE='LC03'), 0) AS CNT_LC03
	  FROM TMP
	 GROUP BY TMP.UPDT_DT
		 ) B
		ON (B.UPDT_DT BETWEEN A.SS AND A.EE)
	 GROUP BY A.SS,A.EE
	 ORDER BY A.SS -->
 	WITH TMP AS (
		SELECT 
			AA.REGIST_DT::DATE,
			AA.MLSFC_INDUTY_NM,
			AA.MLSFC_INDUTY_CODE,
			BB.rnum,
			COUNT(*) AS cnt
		FROM (
			SELECT
				A.FRNCHS_NO
				, A.REGIST_DT
				, C.MLSFC_INDUTY_NM
				,C.MLSFC_INDUTY_CODE 
			FROM TB_SCH_BRD_HIST A
			INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
			INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
		) AA,
		(
			SELECT a.MLSFC_INDUTY_NM
			     , a.MLSFC_INDUTY_CODE
			     , ROW_NUMBER() OVER() AS rnum
			  FROM (
				SELECT
					 C.MLSFC_INDUTY_NM
					,C.MLSFC_INDUTY_CODE 
					, COUNT(*) AS cnt
				FROM TB_SCH_BRD_HIST A
				INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
				INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
				GROUP BY C.MLSFC_INDUTY_CODE
				ORDER BY cnt DESC
				LIMIT 5
			) a
		) BB
		WHERE AA.MLSFC_INDUTY_CODE = BB.MLSFC_INDUTY_CODE
		GROUP BY AA.MLSFC_INDUTY_NM, AA.REGIST_DT::DATE, AA.MLSFC_INDUTY_CODE, bb.rnum 
		ORDER BY bb.rnum,  AA.REGIST_DT::DATE DESC
	)
	SELECT /* A.SS */
		   TO_CHAR(A.EE::DATE,'mm/dd') AS EE
		 , COALESCE(SUM(B.CNT_LC01),0) AS CNT_LC01
		 , COALESCE(SUM(B.CNT_LC02),0) AS CNT_LC02
		 , COALESCE(SUM(B.CNT_LC03),0) AS CNT_LC03
		 , COALESCE(SUM(B.CNT_LC04),0) AS CNT_LC04
		 , COALESCE(SUM(B.CNT_LC05),0) AS CNT_LC05
	FROM (
		SELECT 
			DATE_TRUNC('WEEK',NOW())::DATE - LEVEL AS SS
			, (DATE_TRUNC('WEEK',NOW())::DATE - LEVEL) + 7 AS EE
		FROM GENERATE_SERIES(7,56,7) LEVEL
	) A
	LEFT OUTER JOIN (
		SELECT 
			REGIST_DT
			, COALESCE(SUM(cnt) FILTER(WHERE rnum= 1), 0) AS CNT_LC01
		    , COALESCE(SUM(cnt) FILTER(WHERE rnum= 2), 0) AS CNT_LC02
		    , COALESCE(SUM(cnt) FILTER(WHERE rnum= 3), 0) AS CNT_LC03
		    , COALESCE(SUM(cnt) FILTER(WHERE rnum= 4), 0) AS CNT_LC04
	        , COALESCE(SUM(cnt) FILTER(WHERE rnum= 5), 0) AS CNT_LC05
		FROM TMP
		GROUP BY TMP.REGIST_DT
	) B ON (B.REGIST_DT BETWEEN A.SS AND A.EE)
	GROUP BY A.SS,A.EE
	ORDER BY A.SS
<!-- 	WITH TMP AS (
		SELECT 
			AA.REGIST_DT::DATE,
			AA.MLSFC_INDUTY_NM,
			AA.MLSFC_INDUTY_CODE,
			BB.rnum,
			COUNT(*) AS cnt
		FROM (
			SELECT
				A.FRNCHS_NO
				, A.REGIST_DT
				, C.MLSFC_INDUTY_NM
				,C.MLSFC_INDUTY_CODE 
			FROM TB_SCH_BRD_HIST A
			INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
			INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
		) AA,
		(
			SELECT a.MLSFC_INDUTY_NM
			     , a.MLSFC_INDUTY_CODE
			     , ROW_NUMBER() OVER() AS rnum
			  FROM (
				SELECT
					 C.MLSFC_INDUTY_NM
					,C.MLSFC_INDUTY_CODE 
					, COUNT(*) AS cnt
				FROM TB_SCH_BRD_HIST A
				INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
				INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
				GROUP BY C.MLSFC_INDUTY_CODE
				ORDER BY cnt DESC
				LIMIT 5
			) a
		) BB
		WHERE AA.MLSFC_INDUTY_CODE = BB.MLSFC_INDUTY_CODE
		GROUP BY AA.MLSFC_INDUTY_NM, AA.REGIST_DT::DATE, AA.MLSFC_INDUTY_CODE, bb.rnum 
		ORDER BY bb.rnum,  AA.REGIST_DT::DATE DESC
	)
	SELECT TO_CHAR(A.EE::DATE,'mm/dd') AS EE
		 , COALESCE(SUM(B.CNT_LC01),0) AS CNT_LC01
		 , COALESCE(SUM(B.CNT_LC02),0) AS CNT_LC02
		 , COALESCE(SUM(B.CNT_LC03),0) AS CNT_LC03
		 , COALESCE(SUM(B.CNT_LC04),0) AS CNT_LC04
		 , COALESCE(SUM(B.CNT_LC05),0) AS CNT_LC05
	FROM (
		SELECT 
			DATE_TRUNC('WEEK',NOW())::DATE - LEVEL AS SS
			, (DATE_TRUNC('WEEK',NOW())::DATE - LEVEL) + 7 AS EE
		FROM GENERATE_SERIES(7,56,7) LEVEL
		SELECT 
			DATE_TRUNC('WEEK',NOW())::DATE - LEVEL AS EE
		FROM GENERATE_SERIES(0,6) LEVEL 
		SELECT CURRENT_DATE - S.A AS EE FROM generate_series(0,6) AS S(A)
	) A
	LEFT OUTER JOIN (
		SELECT 
			REGIST_DT
			, COALESCE(SUM(cnt) FILTER(WHERE rnum= 1), 0) AS CNT_LC01
		    , COALESCE(SUM(cnt) FILTER(WHERE rnum= 2), 0) AS CNT_LC02
		    , COALESCE(SUM(cnt) FILTER(WHERE rnum= 3), 0) AS CNT_LC03
		    , COALESCE(SUM(cnt) FILTER(WHERE rnum= 4), 0) AS CNT_LC04
	        , COALESCE(SUM(cnt) FILTER(WHERE rnum= 5), 0) AS CNT_LC05
		FROM TMP
		GROUP BY TMP.REGIST_DT
	) B ON B.REGIST_DT = A.EE
	GROUP BY A.EE
	ORDER BY A.EE -->
	</select>
	
	<select id="selectChartIntrstNmList" parameterType="java.util.Map" resultType="egovMap">
	/*selectChartIntrstNmList TOP5 중분류 이름*/
		SELECT 
			CASE AA.rnum 
				WHEN 1 THEN AA.MLSFC_INDUTY_NM
				WHEN 2 THEN AA.MLSFC_INDUTY_NM
				WHEN 3 THEN AA.MLSFC_INDUTY_NM
				WHEN 4 THEN AA.MLSFC_INDUTY_NM
				ELSE AA.MLSFC_INDUTY_NM
			END AS topFiveNm
		FROM 
		(
			SELECT 
				AA.REGIST_DT::DATE,
				AA.MLSFC_INDUTY_NM,
				AA.MLSFC_INDUTY_CODE,
				BB.rnum,
				COUNT(*) AS cnt
			FROM (
				SELECT
					A.FRNCHS_NO
					, A.REGIST_DT
					, C.MLSFC_INDUTY_NM
					,C.MLSFC_INDUTY_CODE 
				FROM TB_SCH_BRD_HIST A
				INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
				INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
			) AA,
			(
				SELECT a.MLSFC_INDUTY_NM
				     , a.MLSFC_INDUTY_CODE
				     , ROW_NUMBER() OVER() AS rnum
				  FROM (
					SELECT
						 C.MLSFC_INDUTY_NM
						,C.MLSFC_INDUTY_CODE 
						, COUNT(*) AS cnt
					FROM TB_SCH_BRD_HIST A
					INNER JOIN TB_FRNCHS_INFO B ON A.FRNCHS_NO = B.FRNCHS_NO
					INNER JOIN TB_FRNCHS_MLSFC_CODE C ON B.MLSFC_INDUTY_CODE = C.MLSFC_INDUTY_CODE
					GROUP BY C.MLSFC_INDUTY_CODE
					ORDER BY cnt DESC
					LIMIT 5
				) a
			) BB
			WHERE AA.MLSFC_INDUTY_CODE = BB.MLSFC_INDUTY_CODE
			GROUP BY AA.MLSFC_INDUTY_NM, AA.REGIST_DT::DATE, AA.MLSFC_INDUTY_CODE, bb.rnum 
			ORDER BY bb.rnum,  AA.REGIST_DT::DATE DESC
		) AA 
		GROUP BY AA.MLSFC_INDUTY_NM, AA.rnum
		ORDER BY AA.rnum ASC
	</select>
	<!-- 차트-페어북 사용현황 -->
	<select id="selectChartFairUsage" parameterType="java.util.Map" resultType="egovMap">
	<!--   WITH TMP AS (
	SELECT TO_CHAR(A.CONECT_DT::DATE,'mm/dd') AS CONECT_DT
		 , COUNT(A.LOGIN_ID) CNT
		 , B.USER_SE_CODE
		 ,CASE WHEN A.LOGIN_ID = '0' THEN 'US00' ELSE B.USER_SE_CODE END  
	  FROM TB_CONECT_LOG A
		 , TB_USER B브랜드관리자 추가
		, (
			SELECT USER_SE_CODE, USER_NO  FROM TB_USER UNION SELECT USER_SE_CODE, USER_NO FROM tb_brand_hedofc_mngr 
		) B
	 WHERE 1=1
	   AND A.LOGIN_ID = CAST(B.USER_NO AS VARCHAR)
	   AND A.LOGIN_ID IN (CAST(0 AS VARCHAR), CAST(B.USER_NO AS VARCHAR)) 
	   AND A.CONECT_DT > NOW()::DATE - 6
	   AND A.CONECTR_ACT LIKE '%.do%'
	 GROUP BY A.CONECT_DT::DATE, A.LOGIN_ID, CASE WHEN A.LOGIN_ID = '0' THEN 'US00' ELSE B.USER_SE_CODE END
		 )
	SELECT A.CONECT_DT
		 , COALESCE(B.CNT_US01,0) AS CNT_US01
		 , COALESCE(B.CNT_US02,0) AS CNT_US02
		 , COALESCE(B.CNT_US03,0) AS CNT_US03
		 , COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03),0) AS SUM_ROW
		, COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03 + B.CNT_US00),0) AS SUM_ROW
	  FROM (
	SELECT TO_CHAR(NOW()::DATE - LEVEL,'mm/dd') AS CONECT_DT
	  FROM GENERATE_SERIES(0,6) LEVEL
		 ) A
	  LEFT OUTER JOIN
		 (
	SELECT CONECT_DT
		 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US01'), 0) AS CNT_US01
		 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US02'), 0) AS CNT_US02
		 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US03'), 0) AS CNT_US03
		 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US00'), 0) AS CNT_US00 비회원 추가
	  FROM TMP
	 GROUP BY TMP.CONECT_DT
		 ) B
		ON (A.CONECT_DT=B.CONECT_DT)
	 ORDER BY CONECT_DT -->
	 WITH TMP AS (
		<!-- SELECT A.CONECT_DT::DATE 
				, COUNT(A.LOGIN_ID) CNT
				, CASE WHEN A.LOGIN_ID = '0' THEN 'US00' ELSE B.USER_SE_CODE END  
		FROM TB_CONECT_LOG A
		, (
			SELECT USER_SE_CODE
					, USER_NO  
			FROM TB_USER 
			UNION 
			SELECT USER_SE_CODE
					, USER_NO 
			FROM tb_brand_hedofc_mngr 
		) B
		WHERE 1=1
		AND A.LOGIN_ID IN (CAST(0 AS VARCHAR), CAST(B.USER_NO AS VARCHAR)) 
		AND A.CONECT_DT > NOW()::DATE - 6
		AND A.CONECTR_ACT LIKE '%.do%'
		GROUP BY A.CONECT_DT::DATE, A.LOGIN_ID, CASE WHEN A.LOGIN_ID = '0' THEN 'US00' ELSE B.USER_SE_CODE END
		ORDER BY A.CONECT_DT::DATE DESC -->
		SELECT 
			AA.CONECT_DT
		  , COUNT(CASE WHEN AA.SESION_ID IS NOT NULL THEN 1 END)::INTEGER AS CNT	
		  , AA.USER_SE_CODE
		FROM (	
			SELECT A.CONECT_DT::DATE 
			     , A.SESION_ID
				 , B.USER_SE_CODE
			FROM TB_CONECT_LOG A
			, (
				SELECT 'US00' AS USER_SE_CODE
					, '0' AS USER_NO 
				UNION 
				SELECT USER_SE_CODE
						, USER_NO  
				FROM TB_USER 
				UNION 
				SELECT USER_SE_CODE
						, USER_NO 
				FROM tb_brand_hedofc_mngr 
			) B
			WHERE 1=1
			AND A.LOGIN_ID::INTEGER  = B.USER_NO
			AND A.CONECT_DT > NOW()::DATE - 6
			GROUP BY A.CONECT_DT::DATE,  A.SESION_ID,  A.CONECTR_IP, A.LOGIN_ID, B.USER_SE_CODE
		) AA
		GROUP BY AA.USER_SE_CODE, AA.CONECT_DT
	)
	SELECT TO_CHAR(A.CONECT_DT::DATE,'mm/dd') AS CONECT_DT
		 <!--  , COALESCE(B.CNT_US01,0) AS CNT_US01
		  , COALESCE(B.CNT_US02,0) AS CNT_US02
		  , COALESCE(B.CNT_US03,0) AS CNT_US03 -->
<!-- 		  , COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03),0) AS SUM_US -->
		  ,	COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03 + B.CNT_US04 + B.CNT_US06),0) AS SUM_US
		  , COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03 + B.CNT_US04 + B.CNT_US06 + B.CNT_US00),0) AS SUM_ROW
		<!--   , COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03),0) AS SUM_ROW -->
	FROM (
		<!-- SELECT DATE_TRUNC('WEEK',NOW())::DATE - LEVEL AS CONECT_DT
		FROM GENERATE_SERIES(0,6) LEVEL -->
		SELECT CURRENT_DATE - S.A AS CONECT_DT FROM generate_series(0,6) AS S(A)
	) A
	LEFT OUTER JOIN (
		SELECT CONECT_DT
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US01'), 0) AS CNT_US01
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US02'), 0) AS CNT_US02
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US03'), 0) AS CNT_US03
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US04'), 0) AS CNT_US04
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US06'), 0) AS CNT_US06
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US00'), 0) AS CNT_US00
		FROM TMP
		GROUP BY TMP.CONECT_DT
	) B
	ON A.CONECT_DT = B.CONECT_DT
	ORDER BY  A.CONECT_DT::DATE
<!-- 	WITH TMP AS (
		SELECT A.CONECT_DT::DATE 
				, COUNT(1) CNT
				, B.USER_SE_CODE
		FROM TB_CONECT_LOG A
		, (
			SELECT 'US00' AS USER_SE_CODE
				, '0' AS USER_NO 
			UNION 
			SELECT USER_SE_CODE
					, USER_NO  
			FROM TB_USER 
			UNION 
			SELECT USER_SE_CODE
					, USER_NO 
			FROM tb_brand_hedofc_mngr 
		) B
		WHERE 1=1
		AND A.LOGIN_ID::INTEGER  = B.USER_NO
		AND A.CONECT_DT > NOW()::DATE - 6
		AND A.CONECTR_ACT LIKE '%.do%'
		GROUP BY A.CONECT_DT::DATE, A.LOGIN_ID, B.USER_SE_CODE
		ORDER BY A.CONECT_DT::DATE DESC
	)
	SELECT TO_CHAR(A.CONECT_DT::DATE,'mm/dd') AS CONECT_DT
		  , COALESCE((B.CNT_US01 + B.CNT_US02 + B.CNT_US03 + B.CNT_US04 + B.CNT_US06 + B.CNT_US00),0) AS SUM_ROW
	FROM (
		SELECT CURRENT_DATE - S.A AS CONECT_DT FROM generate_series(0,6) AS S(A)
	) A
	LEFT OUTER JOIN (
		SELECT CONECT_DT
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US01'), 0) AS CNT_US01
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US02'), 0) AS CNT_US02
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US03'), 0) AS CNT_US03
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US04'), 0) AS CNT_US04
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US06'), 0) AS CNT_US06
			 , COALESCE(SUM(CNT) FILTER(WHERE USER_SE_CODE='US00'), 0) AS CNT_US00
		FROM TMP
		GROUP BY TMP.CONECT_DT
	) B
	ON A.CONECT_DT = B.CONECT_DT
	ORDER BY  A.CONECT_DT::DATE -->
	</select>
	
	<select id="selectTopListNowCount" resultType="int">
	/*selectTopListNowCount 현재 검색내역 중 중복 제외 총 목록 수 조회*/
		SELECT 
			COUNT(A.CTN) AS CNT
		FROM (
			SELECT COUNT(FRNCHS_NO) AS CTN  
			FROM TB_SCH_BRD_HIST 
			GROUP BY FRNCHS_NO
		) A
	</select>
	
	<!-- 인기 프랜차이즈 TOP10 조회 -->
	<select id="selectTopTen" resultType="egovMap" parameterType="java.util.Map">
	/*selectTopTen*/
	SELECT A.BSN_SGNAL AS SCH_BRD_WORD
		 , A.FRNCHS_NO
		 , C.YEAR
		 , ROW_NUMBER() OVER (ORDER BY B.CTN DESC) AS RN 
	FROM TB_FRNCHS_INFO A
	<choose>
	<when test = "topListCnt >= 100">
	INNER JOIN (
		SELECT COUNT(FRNCHS_NO) AS CTN  
			 , FRNCHS_NO 
		FROM TB_SCH_BRD_HIST 
		GROUP BY FRNCHS_NO
	) B ON A.FRNCHS_NO = B.FRNCHS_NO
	</when>
	<otherwise>
	LEFT JOIN (
		SELECT COUNT(FRNCHS_NO) AS CTN  
			 , FRNCHS_NO 
		FROM TB_SCH_BRD_HIST 
		GROUP BY FRNCHS_NO
	) B ON A.FRNCHS_NO = B.FRNCHS_NO
	</otherwise>
	</choose>
	LEFT JOIN TB_INFO_DCS_BBS C ON C.FRNCHS_NO = A.FRNCHS_NO AND C.DELETE_AT = 'N' AND C.YEAR = (SELECT MAX(YEAR) FROM TB_INFO_DCS_BBS WHERE FRNCHS_NO = A.FRNCHS_NO) 
	ORDER BY B.CTN DESC
	LIMIT 100
	</select>
	
	<select id="selectBoardLc" resultType="egovMap" parameterType="java.util.Map">
		SELECT /*selectBoardLc 공통게시판 url 조회*/
			BBS_NM, BBS_LC, MASTER_SN
		FROM TB_BBS_MASTER 
		WHERE 1=1
		AND BBS_NM LIKE '%'|| #{bbsNm} ||'%'
	</select>
	

</mapper>